<template>
	<!-- remove list-cell layer fix android 4.x overflow limit error: 28 layers! -->
	<!-- <view class="list-cell view" @click="click"></view> -->
	<view class="media-item view" :style="{ flexDirection: 'column' }" hover-class="media-item-hover" @click="click">
		<!-- <view class="view" :style="options.article_type === 2 ? 'flex-direction: row';" :class="{'media-image-right': options.article_type === 2, 'media-image-left': options.article_type === 1}"> -->
		<!-- TODO 在支付宝小程序下 需要用 style 覆盖标签的默认样式 -->
		<view class="user">
			<view class="view userinfo-avatar-wapper">
				<image class="userinfo-avatar" :src="user.avatarUrl"></image>
			</view>
			<view class="user-right">
				<view class="view" @tap="toDetail">
					<text class="media-title">{{ user.nickName }}</text>
				</view>
				<view class="view" @tap="toDetail">
					<text class="media-content" :style="{width: contentWidth + 'px'}">{{ row.content }}</text>
				</view>
			</view>
		</view>
		
		<view class="uni-uploader-body" style="display: block;" @tap="noThing">
			<view class="uni-uploader__files">
				<block v-for="(image, index) of row.imagesThumbnailBase64Array" :key="index">
					<view class="uni-uploader__file"><image class="uni-uploader__img" :src="image" @tap="previewImage(row.id, index)"></image></view>
				</block>
			</view>
		</view>
		
		
		
		
		<view class="media-foot flex-row" style="flex-direction: row;">
			<view class="media-info flex-row" style="flex-direction: row;">
				<text class="info-text">{{ row.modifyDate }}</text>
			</view>
			<view class="operation-view">
				<text @tap="copyText(row.content)">复制文字</text>
				<button v-if="row.creator === user.username" type="primary" size="mini" plain="true" @tap="onePressSave(row)">一键保存</button>
				<button v-if="row.creator !== user.username" type="primary" size="mini" plain="true" @tap="onePressRelay(row)">一键转发</button>
				
			</view>
		</view>
	</view>
</template>

<script>
import base64src from '@/common/base64src';
import laoyiApi from '@/api/laoyi';
import ACLApi from '@/common/ACL';
import canvasUtil from '@/common/canvasUtil';
import { createUniqueString } from '@/utils';
import toolUtils from '@/pages/components/circleFriends/utils';

export default {
	props: {
		row: {
			type: Object,
			default: function(e) {
				return {};
			}
		},
		user: {
			type: Object,
			default: function(e) {
				return {};
			}
		},
		canvasId: {
			type: String,
			default: ''
		}
	},
	data() {
	    return {
			originImageArray: [],
			contentWidth: 300 
		}
	},
	async onShow() {
		let systemInfo = await canvasUtil.device.getSystemInfo();
		this.contentWidth = systemInfo.width - 70
	},
	async onReady() {
		let systemInfo = await canvasUtil.device.getSystemInfo();
		this.contentWidth = systemInfo.width - 70
	},
	methods: {
		noThing() {
			
		},
		toDetail() {
			uni.navigateTo({
				url: '/pages/tool/circleFriends/detail?id=' + this.row.id
			});
		},
		copyText(content) {
			uni.setClipboardData({
				data: content,
				success: function() {
					uni.showToast({
						title: '文字已经复制，长按粘贴即可使用！',
						duration: 2000,
						icon: 'none'
					});
				}
			});
		},
		
		onePressRelay(row) {
			let _this = this
			uni.showLoading({
				title: '转发中...'
			});
			laoyiApi.personal.imageText.relay({ id: row.id }).then(result => {
				uni.hideLoading();
				uni.showToast({
					title: result.message,
					duration: 2000,
					success() {
						//跳转到自己的列表,并告诉主页面需要刷新
						_this.$store.dispatch('toggleRefreshTool')
						uni.switchTab({
							url: '/pages/tabBar/tool/tool'
						})
					}
				});
			});

			return false;
			if (row.creator === this.user.username) {
				uni.showToast({
					title: '自己不能转发自己的图文！',
					duration: 2000,
					icon: 'none'
				});
			} else {
			}
		},
		async onePressSave(row) {
			let _this = this;
			
			uni.showLoading({
				title: '正在下载原图...'
			})
			let imagesBase64Array = await this.downLoadOriginImage(row.id)
			
			let j = 0; //计算成功保存的张数
			let size = imagesBase64Array.length;
			//获取二维码
			let qrCodeObject = await laoyiApi.personal.imageText.getImageTextQrCode({ id: row.id });
			const fsm = uni.getFileSystemManager();

			for (var i = 0; i < size; i++) {
				//图片
				let path = await base64src(imagesBase64Array[i], createUniqueString());
				
				if (i === 0) {
					uni.hideLoading()
					uni.showLoading({
						title: '正在合在海报...'
					})
					
					//获取图片大小
					let imageInfo = await canvasUtil.image.getImageInfo(path);
					let imageWidth = imageInfo.width;
					let imageHeight = imageInfo.height;
					let scale = imageHeight / imageWidth;
					//console.log(“宽长比” +scale)

					//获取设备宽高，设置canvas画布的高度
					let systemInfo = await canvasUtil.device.getSystemInfo();
					let canvasHeight = systemInfo.width * scale + 120; //120是给二维码留的
					this.$emit('changeCanvasHeight', canvasHeight);

					let canvasId = await toolUtils.canvas.imageToPlaypill(this.canvasId, path, qrCodeObject.data.wxQrFile, qrCodeObject.data.wxMpQrFile);
					//避免缓存无限膨胀，删除图片
					fsm.removeSavedFile({
						filePath: path
					});

					path = await canvasUtil.canvas.getCanvasPath(canvasId);
					
					uni.hideLoading()
					uni.showLoading({
						title: '海报合成成功！'
					})
				}
				
				uni.showLoading({
					title: `保存${i + 1}/${size}图片`
				})
				var isCompleted = await _this.saveImage(path);
				if (isCompleted) {
					j++;
					//避免缓存无限膨胀，删除图片
					fsm.removeSavedFile({
						filePath: path
					});
				}
			}

			_this.copyText(row.content);
			if (j === size) {
				uni.hideLoading()
				uni.showToast({
					title: '已保存至相册'
				});
			} else {
				uni.hideLoading()
				uni.showToast({
					icon: 'none',
					title: '成功保存' + j + '张图片，' + (size - j) + '张保存失败！'
				});
			}
		},
		async saveImage(path) {
			return new Promise((resolve, reject) => {
				uni.saveImageToPhotosAlbum({
					filePath: path,
					success: res => {
						resolve(true);
					},
					fail: e => {
						resolve(false);
					}
				});
			});
		},
		downLoadOriginImage(id) {
			let _this = this
			return new Promise((resolve, reject) => {
				if(!_this.originImageArray || _this.originImageArray.length === 0) {
					laoyiApi.personal.imageText.downLoadOriginImage({id: id}).then(result => {
						_this.originImageArray = result.data
						resolve(_this.originImageArray)
					}).catch(e => {
						reject(e.getMessage)
					})
				}else {
					resolve(_this.originImageArray)
				}
				
			})
		},
		async previewImage(id, index) {
			//var current = e.target.dataset.src;
			uni.showLoading({
				title: '下载原图中...'
			})
			let imagesBase64Array = await this.downLoadOriginImage(id)
			
			uni.previewImage({
				current: imagesBase64Array[index],
				urls: imagesBase64Array,
				success() {
					uni.hideLoading()
				},
				longPressActions: {
					itemList: ['发送给朋友', '保存图片', '收藏'],
					success: function(data) {
						//console.log('选中了第' + (data.tapIndex + 1) + '个按钮,第' + (data.index + 1) + '张图片');
					},
					fail: function(err) {
						console.log(err.errMsg);
					}
				}
			});
		},
		click() {
			this.$emit('click');
		},
		close(e) {
			this.$emit('close');
		}
	}
};
</script>

<style lang="scss" scoped>
@import '../../../../common/uni-nvue.css';
	
.media-item {
	padding: 20upx ;
}
.user {
	flex-direction: row;
	
	.userinfo-avatar-wapper {
		width: 90upx;
		height: 90upx;
		.userinfo-avatar {
			border-radius: 50%;
			width: 100%;
			height: 100%;
			border: 4upx solid #dadada;
		}
	}
	.user-right {
		padding-left: 10upx ;
		.media-title {
			font-size: 16px ;
			color: #777 ;
		}
		.media-content {
			padding: 10upx;
		}
	}
}

.uni-list-cell-hover {
	background-color: #eeeeee;
}

.media-item-hover {
	background-color: #eee;
}

.media-item-line {
	left: 30upx;
	right: 30upx;
	bottom: 0;
	height: 1upx;
	background-color: #ebebeb;
}

.image-section {
	margin-top: 20upx;
	flex-direction: row;
	justify-content: space-between;
}

.image-section-right {
	margin-top: 0upx;
	margin-left: 10upx;
	width: 225upx;
	height: 146upx;
}

.image-section-left {
	margin-top: 0upx;
	margin-right: 10upx;
	width: 225upx;
	height: 146upx;
}

.image-list1 {
	width: 690upx;
	height: 481upx;
}

.image-list2 {
	width: 225upx;
	height: 146upx;
}

.image-list3 {
	width: 225upx;
	height: 146upx;
}

.media-info {
	flex-direction: row;
	align-items: center;
}

.info-text {
	margin-right: 20upx;
	color: #999999;
	font-size: 24upx;
}

.media-foot {
	margin-top: 25upx;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	border-bottom: 1px solid #ccc ;
	padding-bottom: 30upx ;
}

.operation-view {
	position: relative;
	align-items: center;
	flex-direction: row;
	width: 350upx;
	height: 40upx;
	font-size: 24upx;
	color: #0574e3;
	line-height: 30upx;
	justify-content: center;
	text-align: center;
}

.operation-view text {
	margin-right: 40upx;
}
</style>
