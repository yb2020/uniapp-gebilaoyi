<template>
    <view>
		<view class="camera " @click="goDetailPage('/circleFriends/add')">
			<uni-icons type="camera" color="#ffffff" size="30" />
		</view>
		
		<view class="uni-margin-wrap">
			<swiper class="swiper" circular :indicator-dots="indicatorDots" :autoplay="autoplay" :interval="interval" :duration="duration">
				<swiper-item>
					<view class="swiper-item uni-bg-red">A</view>
				</swiper-item>
				<swiper-item>
					<view class="swiper-item uni-bg-green">B</view>
				</swiper-item>
				<swiper-item>
					<view class="swiper-item uni-bg-blue">C</view>
				</swiper-item>
			</swiper>
		</view>
		
		<view class="uni-userinfo">
			<view class="userinfo-name">
				<text @click="toLogin" v-if="!userInfo.isLogin">
					{{userInfo.nickName || userInfo.email}}
				</text>
				<text v-else>
					{{userInfo.nickName || userInfo.email}}
				</text>
			</view>
			<view class="userinfo-avatar-wapper">
				<image class="userinfo-avatar" :src="userInfo.avatarUrl"></image>
			</view>
		</view>
		
		<view class="list p-rl-20 mb-100">
			<view class="line d-flex-b" v-for="(item, index) of list" :key="index">
				<image class="user-img-s" src="../../../static/shuijiao.jpg" mode=""></image>
				<view class="line-content p-rl-10">
					<view class="line-name d-flex-b">
						{{ item.rootName }}
						<view class="Share" @click="copyBtn(index)">分享</view>
					</view>
					<view class="line-text">{{ item.rootText }}</view>
					<view class="line-imgAll d-flex f-row">
						<image class="image" v-for="(val, i) of item.rootlist" :key="i" :src="val" mode=""></image>
		
						<image class="image" src="../../../static/shuijiao.jpg" mode=""></image>
					</view>
					<view class="line-bottom d-flex-b ">
						<view class="date">{{ item.rootDate }}</view>
						<view class="remark">
							<view class="remark-off" @click.stop="remarkOff(index)">...</view>
							<view class="d-flex remark-click" :class="remark == index ? 'remark-show' : 'remark-hidden'">
								<view class="Tags" @click.stop="Tags">
									<image class="min p-rl-10" :src="tags ? '../../../static/apiHL.png' : '../../../static/api.png'" mode=""></image>
									<text class="p-rl-10">点赞</text>
								</view>
		
								<view class="evaluate">
									<image class="min p-rl-10" src="../../../static/api.png" mode=""></image>
									<text class="p-rl-10">评论</text>
								</view>
							</view>
						</view>
					</view>
					<view class="remark-item">
						<view class="remark-tabs"><text></text></view>
						<view class="remark-text"></view>
					</view>
				</view>
			</view>
		</view>
		
		<Login ref="login" @close="closeLogin" @done="doneLogin"></Login>
		
			
    </view>
</template>
<script>
	import Authorization from "@/common/Authorization"
	import laoyiApi from "@/api/laoyi"
	import Login from "@/pages/components/login"
	
	import {
		mapState,
		mapMutations
	} from 'vuex'
	
    export default {
        components: {
			Login
        },
		computed: {
			...mapState({
				loginProvider: state => state.loginProvider
			})
		},
        data() {
            return {
				userInfo: this.$store.state,
				list: [],
                navigateFlag: false,
				isHiddenTabBar: true,
				background: ['color1', 'color2', 'color3'],
				indicatorDots: true,
				autoplay: true,
				interval: 2000,
				duration: 500
            };
        },
        onShareAppMessage() {
            return {
                title: '欢迎体验uni-app',
                path: '/pages/tabBar/tool/tool'
            };
        },
        onNavigationBarButtonTap(e) {
            uni.navigateTo({
                url: '/pages/about/about'
            });
        },
        onLoad() {
        },
        onReady() {
        },
        onShow() {
            this.navigateFlag = false;
            this.leaveSetTabBarPage();
			
			if(Authorization.checkLogin()) {
				this.getList();
			}

        },
        onHide() {
            this.leaveSetTabBarPage();
        },
        methods: {
			toLogin() {
				if(!Authorization.checkLogin()) {
					this.toggleHideTabBar()
					this.$refs["login"].open()
					return false
				}else {
					this.getList()
					return true
				}
				
			},
			closeLogin() {
				this.toggleHideTabBar()
			},
			changeIndicatorDots(e) {
				this.indicatorDots = !this.indicatorDots
			},
			changeAutoplay(e) {
				this.autoplay = !this.autoplay
			},
			intervalChange(e) {
				this.interval = e.target.value
			},
			durationChange(e) {
				this.duration = e.target.value
			},
            triggerCollapse(e) {
                if (!this.list[e].pages) {
                    this.goDetailPage(this.list[e].url);
                    return;
                }
                for (var i = 0; i < this.list.length; ++i) {
                    if (e === i) {
                        this.list[i].open = !this.list[e].open;
                    } else {
                        this.list[i].open = false;
                    }
                }
            },
            goDetailPage(path) {
                if (this.navigateFlag) {
                    return;
                }
                this.navigateFlag = true;
				
				console.log(path)
				path = path ? "/pages/tool" + path : path
                uni.navigateTo({
                    url: path
                });
            },
            leaveSetTabBarPage() {
                setTimeout(() => {
                    this.navigateFlag = false;
                }, 200)
            },
			getList() {
				console.log("get List")
				if(this.$store.state.isLogin) {
					laoyiApi.imageText.getList().then(result => {
						console.log(result)
					})
				}
			},
			doneLogin(bool) {
				if(bool) {
					this.getList()
				}
			},
			toggleHideTabBar() {
				if (this.isHiddenTabBar) {
					uni.hideTabBar()
				} else {
					uni.showTabBar()
				}
				this.isHiddenTabBar = !this.isHiddenTabBar
			},
        }
    };
</script>

<style lang="scss" scoped>
    @import '../../../common/uni-nvue.css';
	
	.uni-margin-wrap {
		width: 100%;
		margin:0 0;
	}
	.swiper {
		height: 450rpx;
	}
	.swiper-item {
		display: block;
		height: 450rpx;
		line-height: 450rpx;
		text-align: center;
	}
	
	.camera {
		position: fixed;
		width: 80rpx;
		height: 80rpx;
		top: 50rpx;
		left: 0;
		z-index: 99;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	
	.swiper-list {
		margin-top: 40rpx;
		margin-bottom: 0;
	}
	
	.uni-common-mt{
		margin-top:60rpx;
		position:relative;
	}
	
	.info {
		position: absolute;
		right:20rpx;
	}
	
	.uni-padding-wrap {
	    width:550rpx;
	    padding:0 100rpx;
	}
	
	.uni-userinfo {
		position: fixed;
		top: 380upx;
		display: inline-block;
		right: 0;
		width: 300upx;
		padding-right: 30upx;
		.userinfo-name {
			line-height: 128upx;
			font-size: 30upx;
			padding-right: 20upx;
			float: left ;
		}
		.userinfo-avatar-wapper{
			width: 128upx;
			height: 128upx;
			
			.userinfo-avatar {
				//border-radius: 128upx
				border-radius: 10upx;
				width: 100%;
				height: 100%;
				border: 4upx solid #FFFFFF ;
			}
		}
	}
	
	
</style>