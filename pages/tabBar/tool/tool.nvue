<template>
    <view>
		<view class="uni-margin-wrap">
			<swiper class="swiper" circular :indicator-dots="indicatorDots" :autoplay="autoplay" :interval="interval" :duration="duration">
				<swiper-item>
					<view class="swiper-item uni-bg-red">A</view>
				</swiper-item>
				<swiper-item>
					<view class="swiper-item uni-bg-green">B</view>
				</swiper-item>
				<swiper-item>
					<view class="swiper-item uni-bg-blue">C</view>
				</swiper-item>
			</swiper>
		</view>
		
		<view class="uni-userinfo">
			<view class="userinfo-name">
				<!-- #ifdef APP-PLUS || MP-ALIPAY || MP-TOUTIAO -->
				<button @click="getUserInfo" v-if="hasUserInfo === false">登录</button>
				<!-- #endif -->
				<!-- #ifdef MP-WEIXIN || MP-BAIDU || MP-QQ -->
				<button type="primary" open-type="getUserInfo" @getuserinfo="mpGetUserInfo" v-if="hasUserInfo === false">登录</button>
				<!-- #endif -->
				
				<span v-if="hasUserInfo === true">
					{{userInfo.nickName || userInfo.email}}
				</span>
			</view>
			<view class="userinfo-avatar-wapper">
				<image class="userinfo-avatar" :src="userInfo.avatarUrl" @getuserinfo="mpGetUserInfo"></image>
			</view>
		</view>
		
		<uni-popup ref="showLoginPopup" :type="type" @change="change">
			<view class="uni-share">
				<text class="uni-share-title">登录</text>
				<view class="uni-share-content">
					ddsssss
				</view>
				<view class="uni-padding-wrap uni-common-mt">
					<button type="primary" @click="cancel('LoginPopup')">登录</button>
					<button type="default" @click="cancel('LoginPopup')">取消</button>
				</view>
			</view>
		</uni-popup>
		
    </view>
</template>
<script>
    import setTabBar from '@/components/api-set-tabbar.nvue';
	import uniPopup from '@/components/uni-popup/uni-popup.vue';
	
	import {
		mapState,
		mapMutations
	} from 'vuex'
	
    export default {
        components: {
            setTabBar,
			uniPopup
        },
		computed: {
			...mapState({
				loginProvider: state => state.loginProvider
			})
		},
        data() {
            return {
				hasUserInfo: false,
				userInfo: {},
                navigateFlag: false,
				background: ['color1', 'color2', 'color3'],
				indicatorDots: true,
				autoplay: true,
				interval: 2000,
				duration: 500
            };
        },
        onShareAppMessage() {
            return {
                title: '欢迎体验uni-app',
                path: '/pages/tabBar/tool/tool'
            };
        },
        onNavigationBarButtonTap(e) {
            uni.navigateTo({
                url: '/pages/about/about'
            });
        },
        onLoad() {
        },
        onReady() {
        },
        onShow() {
            this.navigateFlag = false;
            this.leaveSetTabBarPage();
			
			console.log(this.userInfo)
			
			// #ifdef APP-PLUS || MP-ALIPAY || MP-TOUTIAO 
			this.getUserInfo();
			// #endif 
			// #ifdef MP-WEIXIN || MP-BAIDU || MP-QQ 
			this.mpGetUserInfo();
			// #endif
        },
        onHide() {
            this.leaveSetTabBarPage();
        },
        methods: {
			changeIndicatorDots(e) {
				this.indicatorDots = !this.indicatorDots
			},
			changeAutoplay(e) {
				this.autoplay = !this.autoplay
			},
			intervalChange(e) {
				this.interval = e.target.value
			},
			durationChange(e) {
				this.duration = e.target.value
			},
            triggerCollapse(e) {
                if (!this.list[e].pages) {
                    this.goDetailPage(this.list[e].url);
                    return;
                }
                for (var i = 0; i < this.list.length; ++i) {
                    if (e === i) {
                        this.list[i].open = !this.list[e].open;
                    } else {
                        this.list[i].open = false;
                    }
                }
            },
            goDetailPage(e) {
                if (this.navigateFlag) {
                    return;
                }
                this.navigateFlag = true;
                if (e === 'set-tabbar') {
                    this.showSetTabBarPage = true;
                    return;
                }
                let url = ~e.indexOf('platform') ? e : '/pages/API/' + e + '/' + e;
                uni.navigateTo({
                    url: url
                });
            },
            leaveSetTabBarPage() {
                setTimeout(() => {
                    this.navigateFlag = false;
                }, 200)
                this.showSetTabBarPage = false;
            },
			// 获取用户信息 API 在小程序可直接使用，在 5+App 里面需要先登录才能调用
			getUserInfo() {
				uni.getUserInfo({
					provider: this.loginProvider,
					success: (result) => {
						console.log('getUserInfo success', result);
						this.hasUserInfo = true;
						this.userInfo = result.userInfo;
					},
					fail: (error) => {
						console.log('getUserInfo fail', error);
						let content = error.errMsg;
						if (~content.indexOf('uni.login')) {
							content = '请在登录页面完成登录操作';
						}
			            // #ifndef APP-PLUS
						uni.getSetting({
							success: (res) => {
								let authStatus = res.authSetting['scope.userInfo'];
								if (!authStatus) {
									uni.showModal({
										title: '授权失败',
										content: 'Hello uni-app需要获取您的用户信息，请在设置界面打开相关权限',
										success: (res) => {
											if (res.confirm) {
												uni.openSetting()
											}
										}
									})
								} else {
									uni.showModal({
										title: '获取用户信息失败',
										content: '错误原因' + content,
										showCancel: false
									});
								}
							}
						})
			            // #endif
			            // #ifdef APP-PLUS
			            uni.showModal({
			            	title: '获取用户信息失败',
			            	content: '错误原因' + content,
			            	showCancel: false
			            });
			            // #endif
					}
				});
			},
			mpGetUserInfo(result) {
				console.log('mpGetUserInfo', result);
				if (result.detail.errMsg !== 'getUserInfo:ok') {
					uni.showModal({
						title: '获取用户信息失败',
						content: '错误原因' + result.detail.errMsg,
						showCancel: false
					});
					return;
				}
				this.userInfo = result.detail.userInfo;
				this.hasUserInfo = true;
			},
			togglePopup(type, open) {
				switch (type) {
					case 'top':
						this.content = '顶部弹出 popup'
						break
			
					case 'bottom':
						this.content = '底部弹出 popup'
						break
					case 'center':
						this.content = '居中弹出 popup'
						break
				}
				this.type = type
				this.$nextTick(() => {
					this.$refs['show' + open].open()
				})
			},
			cancel(type) {
				this.$refs['show' + type].close();
			},
			change(e) {
				console.log('是否打开:' + e.show);
			}
        }
    };
</script>

<style>
    @import '../../../common/uni-nvue.css';
	
	.uni-margin-wrap {
		width: 100%;
		margin:0 0;
	}
	.swiper {
		height: 400rpx;
	}
	.swiper-item {
		display: block;
		height: 400rpx;
		line-height: 300rpx;
		text-align: center;
	}
	
	.swiper-list {
		margin-top: 40rpx;
		margin-bottom: 0;
	}
	
	.uni-common-mt{
		margin-top:60rpx;
		position:relative;
	}
	
	.info {
		position: absolute;
		right:20rpx;
	}
	
	.uni-padding-wrap {
	    width:550rpx;
	    padding:0 100rpx;
	}
	
	.uni-userinfo {
		margin-top: -30upx;
		display: flex;
		flex: 1;
		flex-direction: column;
		justify-content: space-between;
		align-items: flex-start;
		overflow: hidden;
	}
	
	.userinfo-name {
		width: 100%;
		line-height: 36upx;
		font-size: 30upx;
	}
	.userinfo-avatar-wapper{
		margin-right: 20upx;
	}
	.userinfo-avatar {
		border-radius: 128upx;
		width: 128upx;
		border: 4upx solid #a8abae ;
		height: 128upx;
	}
	
	/* 底部分享 */
	.uni-share {
		/* #ifndef APP-NVUE */
		display: flex;
		flex-direction: column;
		/* #endif */
		background-color: #fff;
	}
	
	.uni-share-title {
		line-height: 60rpx;
		font-size: 24rpx;
		padding: 15rpx 0;
		text-align: center;
	}
	
	.uni-share-content {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
		padding: 15px;
	}
	
	.uni-share-content-box {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		align-items: center;
		width: 200rpx;
	}
	
	.uni-share-content-image {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		justify-content: center;
		align-items: center;
		width: 60rpx;
		height: 60rpx;
		overflow: hidden;
		border-radius: 10rpx;
	}
	
	.content-image {
		width: 60rpx;
		height: 60rpx;
	}
	
	.uni-share-content-text {
		font-size: 26rpx;
		color: #333;
		padding-top: 5px;
		padding-bottom: 10px;
	}
	
	.uni-share-btn {
		height: 90rpx;
		line-height: 90rpx;
		font-size: 14px;
		border-top-color: #f5f5f5;
		border-top-width: 1px;
		border-top-style: solid;
		text-align: center;
		color: #666;
	}
</style>