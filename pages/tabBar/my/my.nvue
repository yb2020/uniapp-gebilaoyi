<template>
	<view>
		<view class="user">
			<view class="user-avatar-wapper">
				<image class="user-avatar" :src="userInfo.avatarUrl"></image>
			</view>
			<view class="user-title">
				<text @click="toLogin">
					{{userInfo.nickName}}
				</text>
				<text>
					邀请好友{{userInfo.username}}
					{{userInfo.username}}
				</text>
			</view>
		</view>
		
		<view class="uni-common-mt">
			<uni-list>
				<uni-list-item title="意见反馈" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
				<uni-list-item title="用户规范" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
				<uni-list-item title="联系我们" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
				<uni-list-item title="关于我们" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
				<uni-list-item title="价值观" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
			</uni-list>
		</view>
		
		<view class="uni-common-mt">
			<uni-list>
				<uni-list-item title="其他服务" @tap="chooseLocation" :show-extra-icon="true" :extra-icon="{color: '#4cd964',size: '22',type: 'location'}" />
			</uni-list>
		</view>
		
		<view class="uni-common-mt uni-common-mb" v-if="userInfo.isLogin">
			<uni-list>
				<uni-list-item title="退出登录" class="uni-center" :show-arrow="false" @tap="toLogout" />
			</uni-list>
		</view>
		
		<Login ref="login" @close="closeLogin" @done="doneLogin"></Login>
		
	</view>
</template>

<script>
	import Authorization from "@/common/Authorization"
	import Login from "@/pages/components/login"
	import { mapMutations } from 'vuex'
	
	export default {
		components: {
			Login
		},
		data() {
			return {
				userInfo: this.$store.state,
				isHiddenTabBar: true
			};
		},
		onShow() {
			Authorization.checkLogin()
		},
		methods: {
			...mapMutations({
				logout: 'logout'
			}),
			toLogin() {
				if(!Authorization.checkLogin()) {
					this.toggleHideTabBar()
					this.$refs["login"].open()
				}
				
			},
			closeLogin() {
				this.toggleHideTabBar()
			},
			doneLogin(bool) {
				console.log(bool)
			},
			toggleHideTabBar() {
				if (this.isHiddenTabBar) {
					uni.hideTabBar()
				} else {
					uni.showTabBar()
				}
				this.isHiddenTabBar = !this.isHiddenTabBar
			},
			toLogout() {
				Authorization.wx.logout()
			}
		}
	};
</script>

<style lang="scss" scoped>
.user {
	background: #FF5000;
	overflow: hidden;
	height: 450upx;
	padding: 20upx;
	box-sizing: border-box;
	flex-direction: row;
	align-items: center;
	.user-avatar-wapper{
		width: 128upx;
		height: 128upx;
		
		.user-avatar {
			//border-radius: 128upx
			border-radius: 10upx;
			width: 100%;
			height: 100%;
			border: 4upx solid #F0F0F0 ;
		}
	}
	.user-title {
		
		font-size: 30upx;
		padding-left: 20upx;
		color: #FFFFFF;
		float: left ;
	}
}
.list-bottom {
	box-shadow: 0 0 22rpx rgba(0, 0, 0, 0.18);
	margin-top: 50rpx;
	border-radius: 10rpx;
	.line {
		padding: 30rpx;
		justify-content: space-between;
		align-items: center;

		box-sizing: border-box;
		.name {
		}
		&:not(:first-child) {
			border-top: 2rpx solid rgba(0, 0, 0, 0.18);
		}
	}
}
.my-user {
	.img {
		width: 100rpx;
		height: 100rpx;
		border-radius: 50%;
	}
	.user-name {
		font-size: 40rpx;
		color: #f1f1f1;
	}
}
.list-center {
	box-shadow: 0 0 22rpx rgba(0, 0, 0, 0.18);
	border-radius: 10rpx;
	flex-wrap: wrap;

	align-items: center;
	text-align: center;
	margin-top: 40rpx;
	box-sizing: border-box;

	.line {
		box-sizing: border-box;
		padding-top: 30rpx;
		padding-bottom: 30rpx;
		.img {
			width: 100rpx;
			height: 100rpx;
			box-sizing: border-box;
			display: block;
			margin: 0 auto;
		}
	}
}
.gird {
	width: 33.3%;
}
.m-rl-20 {
	margin-left: 20rpx;
	margin-right: 20rpx;
}
.d-felx {
	display: flex;
}
</style>
